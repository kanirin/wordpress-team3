env:
  repo:            "https://github.com/docker-library/wordpress"
  app_version:     "master"
  repo_region:     "us-central1"
  project_id:      "${{ secrets.PROJECT_ID }}"
  app_name:        "wordpress"
  tag_new_version: "${GITHUB_SHA}"
  repository: "project-team3"
  

  # Sonar stuff, please update accordingly
  enable_sonar:    "true"
  # sonar_organization: "terraform-project-89"
  # sonar_projectKey: "terraform-project-89"
  # sonar_login:  "{{ secrets.sonar_login }}"



# This is a basic workflow to help you get started with Actions

name: ContinuousDelivery

# Controls when the workflow will ru
# on:
  Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
    # branches: [ "master" ]
# 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  image-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Runs a set of commands using the runners shell
      - name: Clone a repo
        run: |
          git clone ${{ env.repo }}  

      - name: SonarCloud Scan
        if: ${{env.enable_sonar == 'true'}}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN}}"

          SONAR_HOST_URL: sonarcloud.io
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=team-3
            -Dsonar.projectKey=team-3_sonarqube-for-project
            -Dsonar.sources=./
    
      
       
        
      # Runs a set of commands using the runners shell
      - name: Build Image
        working-directory: ${{ env.app_name}}
        run: |
          docker build -t ${{ env.app_name }}:${{ env.app_version }}   ./latest/php8.2/apache/


      # Runs a set of commands using the runners shell
      - name: Tag Image
        run: |
          docker image tag ${{ env.app_name }}:${{ env.app_version }} ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.repository }}/${{ env.app_name }}:${{ env.tag_new_version }}     


      # Runs a single command using the runners shell
      - name: Verify Gcloud Installation
        run: gcloud version 


      # Authenticate to GCP
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'


      - name: Authenticate to repository
        run: |
          gcloud auth configure-docker  ${{ env.repo_region }}-docker.pkg.dev

          


      # Runs a set of commands using the runners shell
      - name: Image push
        working-directory: ${{ env.app_name }}
        run: |
          docker push ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.repository }}/${{ env.app_name }}:${{ env.tag_new_version }}
